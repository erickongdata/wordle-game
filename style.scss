@use 'sass:math';

$primary: hsl(49, 85%, 36%);
$secondary: hsl(95, 76%, 36%);
$error: #d32752;
$info: #f6c31c;

$grid-width: 320px;
$grid-height: 385px;
$grid-gap: 5px;

$key-gap: 2px;
$key-width: min(50px, 8.5vw);
$key-height: 50px;
$keyboard-width: calc($key-width * 10 + $key-gap * 2 * 11); // 544

$margin-base: 32px;

$colors: (
  'primary': $primary,
  'secondary': $secondary,
  'error': $error,
  'info': $info,
  'blue': #1919e6,
  'red': #e61919,
  'yellow': #e6e619,
  'green': #19e635,
  'orange': #ffa600,
  'purple': #9900ff,
  'light-grey': hsl(0, 0%, 75%),
  'grey': hsl(0, 0%, 50%),
  'dark-grey': hsl(0, 0%, 25%),
  'dark': hsl(0, 0%, 10%),
  'light': hsl(0, 0%, 90%),
  'black': black,
  'white': white,
);

*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  color: map-get($map: $colors, $key: 'light-grey');
  background-color: map-get($map: $colors, $key: 'dark');
}

.game-title {
  color: map-get($map: $colors, $key: 'light-grey');
  text-align: center;
  margin-bottom: $margin-base;
}

.grid-container {
  width: $grid-width;
  height: $grid-height;
  display: grid;
  grid-template-columns: repeat(5, 1fr);
  grid-template-rows: repeat(6, 1fr);
  gap: $grid-gap;
  margin-inline: auto;
}

.tile {
  display: grid;
  place-items: center;
  color: map-get($map: $colors, $key: 'white');
  border: 1px solid map-get($map: $colors, $key: 'grey');
  background-color: map-get($map: $colors, $key: 'dark');
  border-radius: 6px;
  font-size: math.div($grid-width, 8);
}

.keyboard-container {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-wrap: wrap;
  width: $keyboard-width;
  margin-inline: auto;
  margin-top: $margin-base;
}

.key-tile {
  height: $key-height;
  width: $key-width;
  color: map-get($map: $colors, $key: 'white');
  border: 1px solid map-get($map: $colors, $key: 'light-grey');
  background-color: map-get($map: $colors, $key: 'grey');
  border-radius: 6px;
  margin: $key-gap;
  cursor: pointer;

  font-size: calc($key-width * 0.5);
}

.key-tile:nth-child(20),
.key-tile:nth-child(28) {
  width: calc($key-width * 1.54);
}

@for $i from 11 through 19 {
  .key-tile:nth-child(#{$i}) {
    width: calc($key-width * 1.12);
  }
}

.correct {
  color: map-get($map: $colors, $key: 'white');
  background-color: map-get($map: $colors, $key: 'secondary');
}

.present {
  color: map-get($map: $colors, $key: 'white');
  background-color: map-get($map: $colors, $key: 'primary');
}

.absent {
  color: map-get($map: $colors, $key: 'white');
  background-color: map-get($map: $colors, $key: 'dark-grey');
}
